
DROP TABLE  IF EXISTS SALES;


DROP TABLE IF EXISTS PRODUCTS;
DROP TABLE IF EXISTS CUSTOMERS;
DROP TABLE IF EXISTS SUPPLIERS;
DROP TABLE IF EXISTS DATES;
DROP TABLE IF EXISTS STORES;



CREATE TABLE PRODUCTS(
    PRODUCT_ID VARCHAR(6) PRIMARY KEY NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE CUSTOMERS(
    CUSTOMER_ID VARCHAR(6) PRIMARY KEY NOT NULL,
    CUSTOMER_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE SUPPLIERS(
    SUPPLIER_ID VARCHAR(5) PRIMARY KEY NOT NULL,
    SUPPLIER_NAME VARCHAR(30) NOT NULL
);

CREATE TABLE STORES(
    STORE_ID VARCHAR(4) PRIMARY KEY NOT NULL,
    STORE_NAME VARCHAR(40) NOT NULL
);

CREATE TABLE DATES(
    DATE_ID DATE PRIMARY KEY NOT NULL,
    DAY DECIMAL(2,0) NOT NULL CONSTRAINT DAY_CONSTRAINT
        CHECK(DAY >=1 AND DAY <= 31),
    MONTH DECIMAL(2,0) NOT NULL CONSTRAINT MONTH_CONSTRAINT
        CHECK(MONTH >=1 AND MONTH <=12),
    QUATER DECIMAL(1,0) NOT NULL CONSTRAINT QUATER_CONSTRAINT
        CHECK(QUATER >=1 AND QUATER <= 4),
    YEAR DECIMAL(4,0) NOT NULL,
    WEEK_OF_YEAR DECIMAL(2,0) NOT NULL  CONSTRAINT WEEK_OF_YEAR_CK 
        CHECK (WEEK_OF_YEAR >= 1 AND WEEK_OF_YEAR <= 53),
    WEEK_DAY VARCHAR(9) NOT NULL CONSTRAINT WEEKDAY_CONSTRAINT 
        CHECK (
            WEEK_DAY IN ('SUNDAY','MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY','FRIDAY','SATURDAY')
        )
);


CREATE TABLE SALES(
    TRANSACTION_ID DECIMAL(8,0) PRIMARY KEY NOT NULL, 
    PRODUCT_ID VARCHAR(6) NOT NULL, 
    SUPPLIER_ID VARCHAR(5) NOT NULL, 
    CUSTOMER_ID VARCHAR(4) NOT NULL, 
    STORE_ID VARCHAR(4) NOT NULL, 
    DATE_ID DATE NOT NULL,
    QUANTITY DECIMAL(3,0) NOT NULL,
    TOTAL_SALE DECIMAL(6,2) NOT NULL,

    CONSTRAINT fk_PROD_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
    CONSTRAINT fk_STORE_ID FOREIGN KEY (STORE_ID) REFERENCES STORES(STORE_ID),
    CONSTRAINT fk_DATE_ID FOREIGN KEY (DATE_ID) REFERENCES DATES(DATE_ID),
    CONSTRAINT fk_SUPPLIER_ID FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID),
    CONSTRAINT fk_CUSTOMER_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

commit;

